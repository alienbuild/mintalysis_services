// schemas/session.prisma
// Session and Authentication Management

model Session {
  id           String   @id @default(cuid())
  userId       String?  @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String?  @map("access_token")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "sessions_user_id_fkey")
  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Account {
  userId            String   @map("user_id")
  providerAccountId String   @map("provider_account_id")
  access_token      String?  @db.Text
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  expires_at        Int?
  id_token          String?  @db.Text
  provider          String
  refresh_token     String?  @db.Text
  scope             String?
  token_type        String?
  type              String?
  id                String   @id @default(cuid())
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "accounts_user_id_fkey")
  @@map("accounts")
}

